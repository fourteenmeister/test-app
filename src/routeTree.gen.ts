/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as LayoutAboutRouteImport } from './routes/_layout/about'
import { Route as LayoutMiningPoolsMiningPoolsLayoutRouteImport } from './routes/_layout/mining-pools/_miningPoolsLayout'
import { Route as LayoutMiningPoolsMiningPoolsLayoutIndexRouteImport } from './routes/_layout/mining-pools/_miningPoolsLayout/index'
import { Route as LayoutMiningPoolsMiningPoolsLayoutPoolIdRouteImport } from './routes/_layout/mining-pools/_miningPoolsLayout/$poolId'

const LayoutMiningPoolsRouteImport = createFileRoute('/_layout/mining-pools')()

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutMiningPoolsRoute = LayoutMiningPoolsRouteImport.update({
  id: '/mining-pools',
  path: '/mining-pools',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAboutRoute = LayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutMiningPoolsMiningPoolsLayoutRoute =
  LayoutMiningPoolsMiningPoolsLayoutRouteImport.update({
    id: '/_miningPoolsLayout',
    getParentRoute: () => LayoutMiningPoolsRoute,
  } as any)
const LayoutMiningPoolsMiningPoolsLayoutIndexRoute =
  LayoutMiningPoolsMiningPoolsLayoutIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutMiningPoolsMiningPoolsLayoutRoute,
  } as any)
const LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute =
  LayoutMiningPoolsMiningPoolsLayoutPoolIdRouteImport.update({
    id: '/$poolId',
    path: '/$poolId',
    getParentRoute: () => LayoutMiningPoolsMiningPoolsLayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/about': typeof LayoutAboutRoute
  '/': typeof LayoutIndexRoute
  '/mining-pools': typeof LayoutMiningPoolsMiningPoolsLayoutRouteWithChildren
  '/mining-pools/$poolId': typeof LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute
  '/mining-pools/': typeof LayoutMiningPoolsMiningPoolsLayoutIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof LayoutAboutRoute
  '/': typeof LayoutIndexRoute
  '/mining-pools': typeof LayoutMiningPoolsMiningPoolsLayoutIndexRoute
  '/mining-pools/$poolId': typeof LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/': typeof LayoutIndexRoute
  '/_layout/mining-pools': typeof LayoutMiningPoolsRouteWithChildren
  '/_layout/mining-pools/_miningPoolsLayout': typeof LayoutMiningPoolsMiningPoolsLayoutRouteWithChildren
  '/_layout/mining-pools/_miningPoolsLayout/$poolId': typeof LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute
  '/_layout/mining-pools/_miningPoolsLayout/': typeof LayoutMiningPoolsMiningPoolsLayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/'
    | '/mining-pools'
    | '/mining-pools/$poolId'
    | '/mining-pools/'
  fileRoutesByTo: FileRoutesByTo
  to: '/about' | '/' | '/mining-pools' | '/mining-pools/$poolId'
  id:
    | '__root__'
    | '/_layout'
    | '/_layout/about'
    | '/_layout/'
    | '/_layout/mining-pools'
    | '/_layout/mining-pools/_miningPoolsLayout'
    | '/_layout/mining-pools/_miningPoolsLayout/$poolId'
    | '/_layout/mining-pools/_miningPoolsLayout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/mining-pools': {
      id: '/_layout/mining-pools'
      path: '/mining-pools'
      fullPath: '/mining-pools'
      preLoaderRoute: typeof LayoutMiningPoolsRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/mining-pools/_miningPoolsLayout': {
      id: '/_layout/mining-pools/_miningPoolsLayout'
      path: '/mining-pools'
      fullPath: '/mining-pools'
      preLoaderRoute: typeof LayoutMiningPoolsMiningPoolsLayoutRouteImport
      parentRoute: typeof LayoutMiningPoolsRoute
    }
    '/_layout/mining-pools/_miningPoolsLayout/': {
      id: '/_layout/mining-pools/_miningPoolsLayout/'
      path: '/'
      fullPath: '/mining-pools/'
      preLoaderRoute: typeof LayoutMiningPoolsMiningPoolsLayoutIndexRouteImport
      parentRoute: typeof LayoutMiningPoolsMiningPoolsLayoutRoute
    }
    '/_layout/mining-pools/_miningPoolsLayout/$poolId': {
      id: '/_layout/mining-pools/_miningPoolsLayout/$poolId'
      path: '/$poolId'
      fullPath: '/mining-pools/$poolId'
      preLoaderRoute: typeof LayoutMiningPoolsMiningPoolsLayoutPoolIdRouteImport
      parentRoute: typeof LayoutMiningPoolsMiningPoolsLayoutRoute
    }
  }
}

interface LayoutMiningPoolsMiningPoolsLayoutRouteChildren {
  LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute: typeof LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute
  LayoutMiningPoolsMiningPoolsLayoutIndexRoute: typeof LayoutMiningPoolsMiningPoolsLayoutIndexRoute
}

const LayoutMiningPoolsMiningPoolsLayoutRouteChildren: LayoutMiningPoolsMiningPoolsLayoutRouteChildren =
  {
    LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute:
      LayoutMiningPoolsMiningPoolsLayoutPoolIdRoute,
    LayoutMiningPoolsMiningPoolsLayoutIndexRoute:
      LayoutMiningPoolsMiningPoolsLayoutIndexRoute,
  }

const LayoutMiningPoolsMiningPoolsLayoutRouteWithChildren =
  LayoutMiningPoolsMiningPoolsLayoutRoute._addFileChildren(
    LayoutMiningPoolsMiningPoolsLayoutRouteChildren,
  )

interface LayoutMiningPoolsRouteChildren {
  LayoutMiningPoolsMiningPoolsLayoutRoute: typeof LayoutMiningPoolsMiningPoolsLayoutRouteWithChildren
}

const LayoutMiningPoolsRouteChildren: LayoutMiningPoolsRouteChildren = {
  LayoutMiningPoolsMiningPoolsLayoutRoute:
    LayoutMiningPoolsMiningPoolsLayoutRouteWithChildren,
}

const LayoutMiningPoolsRouteWithChildren =
  LayoutMiningPoolsRoute._addFileChildren(LayoutMiningPoolsRouteChildren)

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
  LayoutMiningPoolsRoute: typeof LayoutMiningPoolsRouteWithChildren
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutIndexRoute: LayoutIndexRoute,
  LayoutMiningPoolsRoute: LayoutMiningPoolsRouteWithChildren,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
